{
  "openapi": "3.0.0",
  "info": {
    "title": "Cisco ThousandEyes API v6",
    "description": "# Cisco ThousandEyes API (v6) Postman Collection\n\nThis is a Postman collection and environment variables covering Cisco ThousandEyes v6 APIs.\n\n## Cisco ThousandEyes\nThousandEyes is the light that illuminates the path an application takes as it traversing infrastructure outside the\nfour walls of the traditional enterprise network. When you can see and hence understand the path,\nyou can assure the user experience is as expected, and know what to remediate when it isn‚Äôt.\n\n\n## What's in the Postman collection\n- A Sandbox access is available [here](https://www.thousandeyes.com/signup/). \n- The collection correlates with the official ThousandEyes [API documentation](https://developer.thousandeyes.com/v6/).\n\n**ThousandEyes Endpoints** covered in this collection\n1. Instant Tests\n2. Tests\n3. Test Data\n4. Credentials\n5. Endpoint Data\n6. Endpoint Scheduled Tests\n7. Endpoint Scheduled Test Data\n8. Endpoint Instant Tests\n9. Snapshots\n10. Agents \u0026 Monitors\n11. Alerts \u0026 Notifications\n12. Labels\n13. Reports\n14. Administrative Endpoints\n15. Usage\n\n‚ö†Ô∏è ***Make sure you update your Environment Variables with the latest Token and Device information!***\n\nüÜí ***Javascript Tests scripts included with this collection to auto-update Environment variables where it fits***",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{{base_url}}"
    }
  ],
  "tags": [
    {
      "name": "Instant tests"
    },
    {
      "name": "Tests"
    },
    {
      "name": "Test Data"
    },
    {
      "name": "Test Data \u003e Network"
    },
    {
      "name": "Test Data \u003e Web"
    },
    {
      "name": "Test Data \u003e DNS"
    },
    {
      "name": "Test Data \u003e SIP"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Endpoint Agents"
    },
    {
      "name": "Endpoint Data"
    },
    {
      "name": "Endpoint Scheduled Tests"
    },
    {
      "name": "Endpoint Scheduled Test Data"
    },
    {
      "name": "Endpoint Instant Tests"
    },
    {
      "name": "Snapshots"
    },
    {
      "name": "Agents \u0026 Monitors"
    },
    {
      "name": "Agents \u0026 Monitors \u003e Agent cluster"
    },
    {
      "name": "Alerts \u0026 Notifications"
    },
    {
      "name": "Labels"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Administrative endpoints"
    },
    {
      "name": "Usage"
    }
  ],
  "paths": {
    "/v6/instant/{testType}": {
      "post": {
        "tags": [
          "Instant tests"
        ],
        "summary": "Instant test",
        "description": "# Instant test\nCreates and runs a new Instant test in ThousandEyes, based on properties provided in the POST data. In order to create and run an Instant test, the user attempting the creation must be a Regular user or have the following permissions:\n* API Access\n* View tests\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-agent\n  * agent-to-server\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)\nNote: bgp tests are currently not supported\n\n* Request body should contain fields to be set during creation. See the Test Metadata page for fields available during test creation. The following fields are accepted but will be ignored by the Instant test API:\n  * interval\n  * subinterval\n  * alertsEnabled\n  * alertRules\n  * bgpMeasurements\n  * bgpMonitors",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"agents\\\": [{\\n\\t\\t\\\"agentId\\\":55521\\n\\t}],\\n\\t\\\"testName\\\": \\\"Postman - developer.cisco.com\\\",\\n\\t\\\"server\\\": \\\"developer.cisco.com\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/instant/{testId}/rerun": {
      "post": {
        "tags": [
          "Instant tests"
        ],
        "summary": "Instant test rerun",
        "description": "# Instant test rerun\nReruns an existent Instant test in ThousandEyes. In order to rerun an Instant test, the user attempting the rerun must be a Regular user or have the following permissions:\n* API Access\n* View tests\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Instant test you wish to rerun.\n* There is no request body for this request.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests.json": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Test list",
        "description": "# Test list\nReturns a list of all tests configured in ThousandEyes. Also returns data for saved events, which are indicated by a boolean field, \"savedEvent\": 1\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests/{testType}.json": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Test list by type",
        "description": "# Test list by type\nReturns a list of all tests of the type specified, configured in ThousandEyes. Also returns data for saved events, which are indicated by a boolean field, \"savedEvent\": 1\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * agent-to-agent\n  * bgp\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests/{testId}.json": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Test details",
        "description": "# Test details\nReturns a details for a test, including test type, name, intervals, targets, alert rules and agents.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests/{testType}/new.json": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Creating a test",
        "description": "# Creating a test\nCreates a new test in ThousandEyes, based on properties provided in the POST data. In order to create a new test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a test and assigning alert rules, that alert rules are based on specific measurements being available. For example, when creating an HTTP server test with network measurements disabled, you will not be able to assign any alert rules that are based on network metrics. The same applies to BGP measurements.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * agent-to-agent\n  * bgp\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)\n* Request body should contain fields to be set during creation. See the [Test Metadata](https://developer.thousandeyes.com/v6/tests/#/test_metadata) page for fields available during test creation.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"interval\\\": 120,\\n\\t\\\"agents\\\": [{\\n\\t\\t\\\"agentId\\\": {{agentId}}\\n\\t}],\\n\\t\\\"testName\\\": \\\"Postman - developer.cisco.com\\\",\\n\\t\\\"url\\\": \\\"https://developer.cisco.com\\\",\\n\\t\\\"port\\\": 443,\\n\\t\\\"alertsEnabled\\\": 0,\\n\\t\\\"enabled\\\": 1\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests/{testType}/{testId}/update.json": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Updating a test",
        "description": "# Updating a test\nUpdates a test in ThousandEyes, based on properties provided in the POST data. In order to edit a test, the user attempting the creation must be an Account Admin, and the target test cannot be a live share or saved event.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a test and assigning alert rules, that alert rules are based on specific measurements being available. For example, when creating an HTTP server test with network measurements disabled, you will not be able to assign any alert rules that are based on network metrics. The same applies to BGP measurements.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * bgp\n  * agent-to-server\n  * agent-to-agent\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * sip-server\n  * voice (RTP Stream)\n* {testId} corresponds to a testId of the type specified by {testType}, see the test list endpoint for a listing of tests\n* Request body should contain fields to be set during creation. See the [Test Metadata](https://developer.thousandeyes.com/v6/tests/#/test_metadata) page for fields available during test creation.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"interval\\\": 120,\\n\\t\\\"agents\\\": [{\\n\\t\\t\\\"agentId\\\": {{agentId}}\\n\\t}],\\n\\t\\\"testName\\\": \\\"Postman - developer.cisco.com - Updated\\\",\\n\\t\\\"url\\\": \\\"https://developer.cisco.com\\\",\\n\\t\\\"port\\\": 443,\\n\\t\\\"alertsEnabled\\\": 0,\\n\\t\\\"enabled\\\": 1\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/tests/{testType}/{testId}/delete.json": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Deleting a test",
        "description": "# Deleting a test\nDeletes the specified test in ThousandEyes, based on the testId provided in the API request. In order to delete a test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * bgp\n  * agent-to-server\n  * agent-to-agent\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * sip-server\n  * voice (RTP Stream)\n* {testId} corresponds to a testId of the type specified by {testType}, see the test list endpoint for a listing of tests.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/net/metrics/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Network"
        ],
        "summary": "Network: End-to-End Metrics",
        "description": "# (Network) End-to-End metrics\nReturns network metrics (loss, latency, jitter, and bandwidth) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* direction=[FROM_TARGET, TO_TARGET, BIDIRECTIONAL] Applicable only for bidirectional Agent-to-Agent tests, specifies the direction for the metrics being retrieved. In the case of bidirectional data, the aggregated data is returned, otherwise unidirectional data will be returned. In the case of unidirectional tests queried with an invalid direction parameter, an error response will be thrown.\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/net/path-vis/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Network"
        ],
        "summary": "Network: Path visualization",
        "description": "# (Network) Path visualization\nReturns a summary of the path visualization data collected from each agent to the destination. In each path visualization attempt, three attempts are made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\nfrom=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* direction=[FROM_TARGET, TO_TARGET] Applicable only for bidirectional Agent-to-Agent tests, specifies the direction for the metrics being retrieved. If available, bidirectional data is returned by default.\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/net/path-vis/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Network"
        ],
        "summary": "Network: Detailed path trace",
        "description": "# (Network) Detailed path trace\nReturns a hop-by-hop summary of the path trace data collected during path visualization. In each path visualization attempt, three attempts are made to reach the destination, and the entire path will be shown in sequence. A roundId must be specified. For agent-to-agent tests, there‚Äôs a special case to consider, since the test can be bidirectional.\n\nConsider agents A, B and C testing agent D, on a bidirectional basis. To query for the route from agent A to agent D, query with testId/{agentA}/roundId?direction=TO_TARGET. For the path from D to A, query with testId/{agentA}/roundId?direction=FROM_TARGET. To get both paths, query the same endpoint with direction=BIDIRECTIONAL. In all cases, the source field will reflect agent A, and the destination field will reflect agent D, but the direction field will show the direction of the trace.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\nRequired parameters:\n* {testId} the ID of the test you wish to retrieve\n* {agentId} the ID of the agent from which you wish to obtain data\n* {roundId} the round ID for which you wish to obtain data. Equals the beginning of the testing round, in epoch time format.\n\nOptional request parameter:\n* direction=[TO_TARGET, FROM_TARGET, BIDIRECTIONAL] indicates the direction of a path trace in the case of a bidirectional agent-to-agent test. This parameter is only applied in the case of bidirectional agent-to-agent tests. Specify the value on the querystring. Without specifying the field, the test will use the default direction for the test, which is chosen based on the following list:\n  * BIDIRECTIONAL (shows both TO_TARGET and FROM_TARGET directions)\n  * TO_TARGET (shows path from source agent to target agent)\n  * FROM_TARGET (shows path from target agent to source agent)",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/net/bgp-metrics/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Network"
        ],
        "summary": "Network: BGP metrics",
        "description": "# (Network) BGP metrics\nReturns a list of BGP monitors observing the target prefix of the destination, and returns the prefix, AS Number, and reachability, path updates, and path changes for the target network.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test for which BGP data is of interest",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/net/bgp-routes/{testId}/{prefixId}/{roundId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Network"
        ],
        "summary": "Network: BGP route information",
        "description": "# (Network) BGP route information\nReturns a sequenced list of networks transited for a specific network prefix. Shows a list of monitors assigned to the test, and the paths transited to reach the destination. This is analogous to showing the ASPath information from a BGP Routing Information Base (rib) dump.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test for which BGP data is of interest\n* {prefixId} the ID of the prefix in question. Obtain prefixId from the /net/bgp-metrics/{testId} endpoint\n* {roundId} the round for which you wish to obtain data. Obtain roundId from the /net/bgp-metrics/{testId} endpoint",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "prefixId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/http-server/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: HTTP server",
        "description": "# (Web) HTTP server\nReturns response code, response and fetch times, TLS session details and component-level (DNS, Connect, Wait, Receive and Fetch) timing for the load of an object over HTTP.\n\n# Optional (Querystring) Parameters\n*format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n*window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n*from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n*aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n*headers=1 optional, will output request and response header information in output. Example below assumes headers=1 was specified as an optional parameter.\n*certificates=1 output list of certificates in the certificate chain. Example below includes certificates=1 as a parameter.\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/page-load/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Page load",
        "description": "# (Web) Page load\nReturns response time, total size, count of objects and errors, and provides page and DOM load times for a web page.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the page load test you for wish to retrieve data",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/page-load/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Page load component detail",
        "description": "# (Web) Page load component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a Page Load test. This is analogous to what is shown in the waterfall view for a Page Load test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Page Load test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/transactions/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Transactions",
        "description": "# (Web) Transactions\nReturns transaction time, counts of steps and errors from each agent selected to run a transaction. A time frame must be specified, or the current round of data will be returned.\n\nFor step-level detail, see Detailed Transactions\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the transaction you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/transactions/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Transaction detail",
        "description": "# (Web) Transaction detail\nReturns transaction time, duration and error counts of steps and pages transited during a execution of a transaction. An agent and roundId is required, since results from a single round of transaction execution will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the transaction you wish to retrieve\n* {agentId} the ID of the agent for which you wish to obtain transaction data\n* {roundId} the roundID for which data is being requested",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/transactions/{testId}/{agentId}/{roundId}/{pageNum}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Transaction component detail",
        "description": "# (Web) Transaction component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a transaction test. This is analogous to what is shown in the waterfall view for a page load or transaction test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Transaction test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data\n* {pageNum} the page number for the page reached in a transaction. Can be obtained from /web/transactions/{testId}/{agentId}/{roundId} endpoint. Page numbers are zero-indexed.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "pageNum",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/web-transactions/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Web Transactions",
        "description": "# (Web) Web Transactions\nReturns test configuration, and transaction time and errors from each agent selected to run a web transaction. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the web transaction you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/web-transactions/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Web Transaction detail",
        "description": "# (Web) Web Transaction detail\nReturns transaction time, marker duration, error counts, and pages transited during the execution of a web transaction. An agentId and roundId is required, since results from a single round of a web transaction execution will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the web transaction you wish to retrieve\n* {agentId} the ID of the agent for which you wish to obtain transaction data\n* {roundId} the roundID for which data is being requested",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/web-transactions/{testId}/{agentId}/{roundId}/{pageNum}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: Web Transaction component detail",
        "description": "# (Web) Web Transaction component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a web transaction test. This is analogous to what is shown in the waterfall view for a page load or transaction test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Web Transaction test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data\n* {pageNum} the page number for the page reached in a transaction. Can be obtained from /web/web-transactions/{testId}/{agentId}/{roundId} endpoint. Page numbers are zero-indexed.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "pageNum",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/web/ftp-server/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e Web"
        ],
        "summary": "Web: FTP server",
        "description": "# (Web) FTP server\nReturns response code, response and fetch times, as well as component-level (DNS, Connect, Negotiation, Response and Transfer) timing for the load of an object over FTP. FTP tests support plain text FTP, FTPS (FTP over SSL), and SFTP (secure FTP).\n\nNote: this endpoint is only available in API v6 and higher.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dns/trace/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS: Domain trace",
        "description": "# (DNS) Domain trace\nReturns a DNS record from the vantage point of the agent. Similar to dig +trace.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNS trace test you wish to retrieve.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dns/server/{testId}/{serverId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS: Server metrics",
        "description": "# (DNS) Server metrics\nReturns the mappings for a DNS record, along with resolution time to each authoritative server, as measured from the vantage point of the agent. Similar to dig @server.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNS server test you wish to retrieve.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "serverId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dns/dnssec/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS: DNSSEC",
        "description": "# (DNS) DNSSEC\nReturns the keychain validity for a record on a domain secured using DNSSEC extensions.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNSSEC test you wish to retrieve.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dnsp/availability/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS+: Availability",
        "description": "# (DNS+) Availability\nReturns the availability percentage (as measured by the number of vantage points globally which respond with no error) for a domain, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dnsp/mappings/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS+: Mappings",
        "description": "# (DNS+) Mappings\nReturns the mapping, and percentage (as measured by the number of vantage points globally which respond with that mapping) for a domain, aggregated on a country basis. Where multiple mappings are detected in a country, each mapping will be shown, along with a corresponding number of vantage points responding with that mapping.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dnsp/resolution-time/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS+: Resolution time",
        "description": "# (DNS+) Resolution time\nReturns the average resolution time for a domain, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/dnsp/server-latency/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e DNS"
        ],
        "summary": "DNS+: Server latency",
        "description": "# (DNS+) Server latency\nReturns the server latency metrics from a global perspective for a specific nameserver, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/voice/sip-server/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e SIP"
        ],
        "summary": "Voice: SIP server",
        "description": "# (Voice) SIP server\nReturns voice SIP server metrics (response, invite, register time) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the SIP Server test for which you wish to retrieve data",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/voice/rtp-stream/{testId}.json": {
      "get": {
        "tags": [
          "Test Data \u003e SIP"
        ],
        "summary": "Voice: RTP stream",
        "description": "# (Voice) RTP stream\nReturns voice RTP stream metrics (loss, latency, jitter, MOS score) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the RTP Stream test for which you wish to retrieve data",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/credentials.json": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Credential list",
        "description": "# GET /v6/credentialsCredential list\nReturns a list of all credentials configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/credentials/{credentialId}.json": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Credential details",
        "description": "# Credential details\nReturns details for a credential, including test name, reference \u0026 value (value is only visible if the user has View sensitive data in web transaction permission). The user should have access to this credential by sharing the same account and must have the View tests permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "credentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/credentials/new.json": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Creating a credential",
        "description": "# Creating a credential\nCreates a new credential in ThousandEyes, based on properties provided in the POST data. In order to create a new credential, the user attempting the creation must have permission to create tests.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.\n\n# Request\nRequest body should contain both a name and value to be set during creation.\n* name\tstring\tThe name of the credential\n* value\tstring\tThe value of the credential that will be encrypted (if the user has permission to read sensitive data)",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"name\\\": \\\"new_api_credential_postman\\\",\\n\\t\\\"value\\\": \\\"secret p@ssword devnet\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/credentials/{credentialId}/update.json": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Updating a credential",
        "description": "# Updating a credential\nUpdates a credential in ThousandEyes, based on properties provided in the POST data. In order to update a credential, the user attempting the creation must have permission to update tests \u0026 should have access to the credential (same account)\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.\n\n# Request\n* {credentialId} corresponds to the unique ID of the credential to be updated, obtained through the /credentials endpoint\n* Request body should contain fields to be set during update.\n  * name\tstring\tThe name of the credential\n  * value\tstring\tThe value of the credential that will be encrypted (if the user has permission to read sensitive data)",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"value\\\": \\\"updated password devnet\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "credentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/credentials/{credentialId}/delete.json": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Deleting a credential",
        "description": "# Deleting a credential\nDeletes the specified credential in ThousandEyes, based on the credentialID provided in the API request.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "credentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-agents.json": {
      "get": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Listing all agents",
        "description": "# Listing all agents\nReturns a list of all endpoint agents in a given account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* deleted=true|false specifies if deleted agents should be returned too. By default it is false - only non-deleted agents are returned\n* agentName={agent_name} returns only agents with a given name\n* computerName={computer_name} returns only agents with a given computer name",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-agents/{agentId}.json": {
      "get": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Getting an agent by id",
        "description": "# Getting an agent by id\nReturns information about the agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\nRequest\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Updating an agent",
        "description": "# Updating an agent\nUpdates a given agent with a new name.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"newAgentName\\\": \\\"postman devnet endpoint agent updated\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-agents/{agentId}/enable.json": {
      "post": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Enabling an agent",
        "description": "# Enabling an agent\nEnables an agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-agents/{agentId}/disable.json": {
      "post": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Disabling an agent",
        "description": "# Disabling an agent\nDisables an agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-agents/transfer.json": {
      "post": {
        "tags": [
          "Endpoint Agents"
        ],
        "summary": "Transferring an agent",
        "description": "# Transferring an agent\nTriggers a process of transferring a list of agents.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\nThe request‚Äôs body should contain a list of agents in CSV format with the following columns (comma delimited):\n* ‚Äúmachine_id‚Äù - agent id to be transferred\n* ‚Äúfrom_aid‚Äù - account id where the agent needs to be transferred from\n* ‚Äúto_aid‚Äù - account id where the agent needs to be transferred to",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"machine_id,from_aid,to_aid\\n5d0764ac-7e42-4ec8-a0d4-39fc53edccba,111,222\\n5d0764ac-7e42-4ec8-a0d4-39fc53edccba,333,222\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/user-sessions.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint user session list",
        "description": "# Endpoint user session list\nReturns a list of all endpoint user sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "24h"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/user-sessions/{sessionId}.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint user session details",
        "description": "# Endpoint user session details\nReturns details for an endpoint user session\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {sessionId} corresponds to the id of a endpoint user sessions, see the Endpoint user session list endpoint for a listing of endpoint user sessions.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "24h"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/user-sessions/web.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint web pages list",
        "description": "# Endpoint web pages list\nReturns a list of all endpoint web sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "24h"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/user-sessions/{sessionId}/page/{pageId}.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint web page details",
        "description": "# Endpoint web page details\nReturns details for endpoint user session web page request. Provides complete waterfall information with all object requests.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {sessionId} corresponds to the id of a endpoint user sessions, see the Endpoint user session list endpoint for a listing of endpoint user sessions.\n* {pageId} corresponds to the id of a web page, see the Endpoint user session details endpoint for a listing of web pages.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "pageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/user-sessions/network.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint network sessions list",
        "description": "# Endpoint network sessions list\nReturns a list of all endpoint network sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "24h"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/network-topology.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint network topology list",
        "description": "# Endpoint network topology list\nReturns a list of all endpoint network topology results. Results from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\nWarning\nNote that a maximum of 12h worth of data can be retreived at once. If you need more, you need to make multiple requests.\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1h"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/network-topology/{networkProbeId}.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint network topology details",
        "description": "# Endpoint network topology details\nReturns details for a network topology probe\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {networkProbeId} corresponds to the id of a network probe, see the Endpoint network topology list endpoint for a listing of network probes.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "window",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1h"
          },
          {
            "name": "networkProbeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/networks.json": {
      "get": {
        "tags": [
          "Endpoint Data"
        ],
        "summary": "Endpoint networks",
        "description": "# Endpoint networks\nReturns a list of all the networks from which endpoint agents performed user sessions.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-tests.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "summary": "Endpoint scheduled test list",
        "description": "# Endpoint scheduled test list\nReturns a list of all endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-tests/{testType}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "summary": "Endpoint scheduled test list by type",
        "description": "# Endpoint scheduled test list by type\nReturns a list of all endpoint scheduled tests of the type specified, configured in ThousandEyes. The list does not contain saved events.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * http-server",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-tests/{testId}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "summary": "Endpoint scheduled test details",
        "description": "# Endpoint scheduled test details\nReturns details for an endpoint scheduled test, including test type, name, intervals, targets and alert rules.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the endpoint scheduled test you wish to retrieve",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-tests/{testType}/new.json": {
      "post": {
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "summary": "Creating an Endpoint Test",
        "description": "# Creating an Endpoint Test\nCreates a new Endpoint test in ThousandEyes, based on properties provided in the POST data. In order to create a new test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server - endpoint network test\n  * http-server - endpoint http test\n* Request body should contain fields to be set during creation.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"authType\\\": \\\"NONE\\\",\\n\\t\\\"flagPing\\\": true,\\n\\t\\\"flagTraceroute\\\": true,\\n    \\\"groupId\\\": 1,\\n\\t\\\"httpTimeLimit\\\": 5000,\\n\\t\\\"maxMachines\\\": 5,\\n\\t\\\"interval\\\": 3600,\\n\\t\\\"sslVersion\\\": 0,\\n\\t\\\"targetResponseTime\\\": 5000,\\n\\t\\\"testName\\\": \\\"Postman HTTP test DevNet\\\",\\n\\t\\\"url\\\": \\\"developer.cisco.com\\\",\\n\\t\\\"verifyCertHostname\\\": true\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/tests/net/metrics/{testId}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "summary": "Network: End-to-End metrics",
        "description": "# (Network) End-to-End metrics\nReturns network metrics (loss, latency, jitter and bandwidth) from each endpoint agent, for each roundId in the requested window. A time frame must be specified, or the most recent round within last 2 hours will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the endpoint scheduled test you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/tests/net/path-vis/{testId}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "summary": "Network: Path visualization",
        "description": "# (Network) Path visualization\nReturns a summary of the path visualization data collected from each endpoint agent to the destination. In each path visualization attempt, one attempt is made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the most recent round within last 2 hours will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/tests/net/path-vis/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "summary": "Network: Detailed path trace",
        "description": "# (Network) Detailed path trace\nReturns a hop-by-hop summary of the path trace data collected during path visualization. In each round, one path discovery attempt is made to reach the destination. The entire path is returned. A roundId must be specified.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\nRequired parameters:\n* {testId} the ID of the test you wish to retrieve\n* {agentId} the ID of the endpoint agent from which you wish to obtain data\n* {roundId} the round ID for which you wish to obtain data. Equals the beginning of the testing round, in epoch time format.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roundId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-data/tests/web/http-server/{testId}.json": {
      "get": {
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "summary": "Web: HTTP server",
        "description": "# (Web) HTTP server\nReturns response code and response times, as well as component-level (DNS, Connect, Wait and Receive) timing for the load of an object over HTTP.\n\n# ptional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-instant/{testType}.json": {
      "post": {
        "tags": [
          "Endpoint Instant Tests"
        ],
        "summary": "Creating instant test",
        "description": "# Creating instant test\nCreates and runs a new Endpoint Instant test in ThousandEyes, based on properties provided in the POST data. In order to create and run an Instant test, the user attempting the creation must have Edit endpoint tests permission.\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server - endpoint network test\n  * http-server - endpoint http test\n* Request body should contain fields to be set during creation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authType": "NONE",
                  "flagPing": true,
                  "flagTraceroute": true,
                  "groupId": 130096,
                  "httpTimeLimit": 5000,
                  "maxMachines": 5,
                  "sslVersion": 0,
                  "targetResponseTime": 5000,
                  "testName": "Postman DevNet Instant HTTP test",
                  "url": "developer.cisco.com",
                  "verifyCertHostname": true
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/endpoint-instant/{testId}/rerun.json": {
      "post": {
        "tags": [
          "Endpoint Instant Tests"
        ],
        "summary": "Rerunning instant test",
        "description": "# Rerunning instant test\nReruns an existing Endpoint Instant test in ThousandEyes. In order to rerun an Instant test, the user attempting this must have Edit endpoint tests permission.\n\n# Request\n* {testId} the ID of the Instant test you wish to rerun.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "testId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/snapshot.json": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Create a new snapshot",
        "description": "# Create a new snapshot\nCreates a new snapshot in ThousandEyes, based on properties provided in the POST data. This endpoint requires the Create snapshot shares permission be assigned to the role of the user accessing this endpoint.\n\nRegular users are blocked from using any of the POST-based methods.\n\nImportant notes related to snapshot creation using this endpoint:\n* There is a creation limit of 100 snapshots per Organization per day.\n* Snapshots created using this endpoint will expire after 30 days.\n* The time range specified with from and to must be one of the following: 1, 2, 4, 6, 12, 24, 48, 96 hours.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body containing the following fields:\n  * displayName\tstring\tRequired\tn/a\tTitle of the snapshot\n  * from\tdateTime\tRequired\tyyyy-MM-dd hh:mm:ss\tThe date/time when the snapshot will start\n  * isPublic\tinteger\tOptional\tn/a\t0 for saved event, 1 for share link. Defaults to 0\n  * testId\tinteger\tRequired\tn/a\tThe ID of the test you wish to create a snapshot\n  * to\tdateTime\tRequired\tyyyy-MM-dd hh:mm:ss\tThe date/time when the snapshot will end",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n\t\"testId\": {{testId}},\n\t\"displayName\": \"Postman Snapshot created through API\",\n\t\"from\": \"2021-01-01T00:00:00\",\n\t\"to\": \"2021-01-01T01:00:00\",\n\t\"isPublic\": 1\n}"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents/{agentId}/add-to-cluster.json": {
      "post": {
        "tags": [
          "Agents \u0026 Monitors \u003e Agent cluster"
        ],
        "summary": "Adding members (multiple agents)",
        "description": "# Agent cluster - Adding members\nAdds a new member (or multiple members) to an Enterprise Agent cluster.\n\nThis endpoint can only be used by users with the Edit agents in account group permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} in the request URL corresponds to the unique ID of an Enterprise Agent cluster to which new agent(s) will be added.\n\n# Request notes:\n* {agentId} can be obtained from the /v6/agents endpoint.\n* If the agent represented by the {agentId} is not already a cluster, it is converted to a cluster.\n\n# POST Data\n* One or multiple (comma-separated) agentId values representing agents that should be added to the cluster, enclosed in square brackets.\n* Each agentId must represent an agent of the Enterprise type (as shown by the agentType field in agent details).",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"[\\n\\t80001,\\n\\t80002,\\n\\t80003\\n]\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents/{agentId}/remove-from-cluster.json": {
      "post": {
        "tags": [
          "Agents \u0026 Monitors \u003e Agent cluster"
        ],
        "summary": "Converting to an agent (multiple member)",
        "description": "# Agent cluster - Converting to an agent\nConverts a cluster with a single or multiple Enterprise Agent members back to a standalone Enterprise Agent(s).\n\nThis endpoint can only be used for Enterprise Agent clusters, and only by users with the Edit agents in account group permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} in the request URL corresponds to the unique ID of an Enterprise Agent cluster being converted to a standalone Enterprise Agent(s).\n\n# Request notes:\n* {agentId} can be obtained from the /v6/agents endpoint\n\n# POST Data\n* One or multiple (comma-separated) memberId values representing all the agents that belong to and will be removed from the cluster, enclosed in square brackets.\n* Cluster member IDs can be obtained from the /v6/agents API endpoint (the memberId field inside the clusterMembers array).",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"[\\n\\t80001,\\n\\t80002,\\n\\t80003\\n]\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents.json": {
      "get": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Agent list",
        "description": "# Agent list\nReturns a list of all agents available to your account in ThousandEyes, including both Enterprise and Cloud agents.\n\n# Optional (Querystring) Parameters\n* agentTypes=CLOUD|ENTERPRISE|ENTERPRISE_CLUSTER optional, specifies the type of agents requested. Accepts either a single allowed value or a comma-separated list of allowed values\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents/{agentId}.json": {
      "get": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Agent detail",
        "description": "# Agent detail\nReturns details for an agent, including assigned tests. Enterprise agents show utilization data and assigned accounts.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents/{agentId}/update.json": {
      "post": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Updating an agent",
        "description": "# Updating an agent\nUpdates Enterprise Agent details. Users can update the agent parameters specified under Post Data section.\n\nThis endpoint can only be used for Enterprise Agents, and only for users in a role that permits modification of Enterprise Agents.\n\nImportant notes related to agent modification on tests:\n* If an agent is removed from a test, the modification date for tests using that agent at the time it was removed will be changed.\n* If an agent is removed from an entire account group, then all tests using this agent in the removed account group will be updated to reflect the removed agent.\n* If a removed agent is the final remaining agent on a test, then the test will be disabled when the agent is removed.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} corresponds the unique ID of an enterprise agent, obtained from the /agents endpoint\n\n# Post Data\nWhen POSTing data to the /agents/{agentId}/update endpoint, users can update the following fields:\n  * agentName string representation of an agent. No two agents can have the same display name.\n  * enabled boolean representation of agent state. 0 to disable the agent, 1 to enable the agent.\n  * accountGroups an array of accountGroup objects containing only an aid value, in the format { aid: integer }. See /accounts to pull a list of account IDs\n  * tests an array of test objects containing only a testId value in the format { testId: integer }. See /tests to pull a list of tests available in the current account context.\n  * ipv6Policy string representation of the IP version policy. Can be FORCE_IPV4, PREFER_IPV6 or FORCE_IPV6.\n  * verifySslCertificates boolean representation of Verify SSL certificates state. 0 to disable, 1 to enable.\n  * keepBrowserCache boolean representation of Keep browser cache state. 0 to disable, 1 to enable.\n  * targetForTests string representation of target IP address or domain name, representing test destination when agent is acting as a test target in an agent-to-agent test",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"agentName\\\": \\\"Postman DevNet agent name updatedd\\\",\\n    \\\"accountGroups\\\": [\\n      {\\\"aid\\\": 315},\\n      {\\\"aid\\\": 362}\\n    ],\\n    \\\"tests\\\": [\\n      {\\\"testId\\\": 12065}\\n      {\\\"testId\\\": 817},\\n    ],\\n    \\\"targetForTests\\\":\\\"1.2.3.4\\\"\\n  }\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agents/{agentId}/delete.json": {
      "post": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Deleting an Agent",
        "description": "# Deleting an Agent\nDeletes an Enterprise Agent from ThousandEyes. Note: this feature can only be used on Enterprise Agents.\n\nImportant notes related to agent removal:\n* If an agent is deleted, the modification date for tests using that agent at the time it was deleted will be changed.\n* If a deleted agent is the final remaining agent on a test, then the test will be disabled when the agent is removed.\n\nImportant note: if an agent is removed, it must be re-initialized to use the same machine again in different context. Virtual Appliances can be updated using the Reset State button in the Advanced tab of the agent management interface. Users running packaged versions of Linux will need to remove /var/lib/te-agent/\\*.sqlite in order to reinitialize an agent.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} corresponds the unique ID of an enterprise agent, obtained from the /agents endpoint",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "agentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/bgp-monitors.json": {
      "get": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "BGP Monitor list",
        "description": "# BGP Monitor list\nReturns a list of all BGP monitors available to your account in ThousandEyes, including both public and private feeds.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agent-notification-rules.json": {
      "get": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Agent Notification Rules",
        "description": "# Agent Notification Rules\nReturns a list of all agent notification rules configured under your account in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/agent-notification-rules/{ruleId}.json": {
      "get": {
        "tags": [
          "Agents \u0026 Monitors"
        ],
        "summary": "Agent Notification Rule Detail",
        "description": "# Agent Notification Rule Detail\nReturns details of an agent notification rule, including agents it is assigned to.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "ruleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alerts.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Active alerts",
        "description": "# Active alerts\nReturns a list of all active alerts, active at any given time.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alerts/{alertId}.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert detail",
        "description": "# Alert detail\nReturns details about an alert.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "alertId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-rules.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert rules",
        "description": "# Alert rules\nReturns a list of all alert rules configured under your account in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-rules/{ruleId}.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert rule detail",
        "description": "# Alert rule detail\nReturns details about an alert rule.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "ruleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-rules/new.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Creating an alert rule",
        "description": "# Creating an alert rule\nCreates a new alert rule in your account, based on properties provided in the POST data. In order to create a new alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission. Users without this permission will receive an error.\n\nNote: when assigning any alert rule to a test (which can be done as part of the creation activity), the user must be in a role that has the Edit tests permission.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body must contain fields to be set during creation. See the Alert Rule Metadata page for fields available during alert rule creation.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"alertType\\\": \\\"FTP\\\",\\n\\t\\\"default\\\": 0,\\n\\t\\\"expression\\\": \\\"((reachability \u003c 90%))\\\",\\n\\t\\\"minimumSources\\\": 10,\\n\\t\\\"notes\\\": \\\"FTP Alert rule created using write api\\\",\\n\\t\\\"description\\\": \\\"TE FTP Alert rule with write api\\\",\\n\\t\\\"notifications\\\": {\\n\\t\\t\\\"email\\\": {\\n\\t\\t\\t\\\"message\\\": \\\"\\\",\\n\\t\\t\\t\\\"recipient\\\": [\\n\\t\\t\\t\\t\\\"postman+devnet@cisco.com\\\"\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"thirdParty\\\": [{\\n\\t\\t\\t\\\"integrationId\\\": \\\"sl-101\\\",\\n\\t\\t\\t\\\"integrationType\\\": \\\"SLACK\\\"\\n\\t\\t}],\\n\\t\\t\\\"webhook\\\": [{\\n\\t\\t\\t\\\"integrationId\\\": \\\"wb-201\\\",\\n\\t\\t\\t\\\"integrationType\\\": \\\"WEBHOOK\\\"\\n\\t\\t}]\\n\\t},\\n\\t\\\"notifyOnClear\\\": 1,\\n\\t\\\"roundsViolatingOutOf\\\": 10,\\n\\t\\\"roundsViolatingRequired\\\": 10,\\n\\t\\\"roundsViolatingMode\\\": \\\"ANY\\\",\\n\\t\\\"ruleName\\\": \\\"Postman DevNet FTP Alert Rule\\\",\\n\\t\\\"sourceMeasure\\\": \\\"percent\\\",\\n\\t\\\"testIds\\\": [\\n\\t\\t{{testId}}\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-rules/{ruleId}/update.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Updating an alert rule",
        "description": "# Updating an alert rule\nModifies an existing alert rule in your account, based on properties provided in the POST data. In order to modify an alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission. Users without this permission will receive an error.\n\nNote: when assigning any alert rule to a test (which can be done as part of the update activity), the user must be in a role that has the Edit tests permission.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {ruleId} corresponds to a ruleId returned by the /alert-rules endpoint.\n* request body must contain a full list of fields. It is recommended to make a request to the alert-rules/{ruleId} endpoint and modify the conditions of the alert rule based on fields returned in that request. See the Alert Rule Metadata page for fields available during alert rule modification.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"alertType\\\": \\\"FTP\\\",\\n\\t\\\"default\\\": 0,\\n\\t\\\"expression\\\": \\\"((reachability \u003c 90%))\\\",\\n\\t\\\"minimumSources\\\": 10,\\n\\t\\\"notes\\\": \\\"FTP Alert rule created using write api\\\",\\n\\t\\\"description\\\": \\\"TE FTP Alert rule with write api\\\",\\n\\t\\\"notifications\\\": {\\n\\t\\t\\\"email\\\": {\\n\\t\\t\\t\\\"message\\\": \\\"\\\",\\n\\t\\t\\t\\\"recipient\\\": [\\n\\t\\t\\t\\t\\\"postman+devnet@cisco.com\\\"\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"thirdParty\\\": [{\\n\\t\\t\\t\\\"integrationId\\\": \\\"sl-101\\\",\\n\\t\\t\\t\\\"integrationType\\\": \\\"SLACK\\\"\\n\\t\\t}],\\n\\t\\t\\\"webhook\\\": [{\\n\\t\\t\\t\\\"integrationId\\\": \\\"wb-201\\\",\\n\\t\\t\\t\\\"integrationType\\\": \\\"WEBHOOK\\\"\\n\\t\\t}]\\n\\t},\\n\\t\\\"notifyOnClear\\\": 1,\\n\\t\\\"roundsViolatingOutOf\\\": 10,\\n\\t\\\"roundsViolatingRequired\\\": 10,\\n\\t\\\"roundsViolatingMode\\\": \\\"ANY\\\",\\n\\t\\\"ruleName\\\": \\\"Postman DevNet FTP Alert Rule updated\\\",\\n\\t\\\"sourceMeasure\\\": \\\"percent\\\",\\n\\t\\\"testIds\\\": [\\n\\t\\t1001,\\n\\t\\t1002\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "ruleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-rules/{ruleId}/delete.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Deleting an alert rule",
        "description": "# Deleting an alert rule\nDeletes an alert rule in your account. In order to delete an alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission, as well as Edit Tests permission, in the event that the alert rule is assigned to any tests. Users without appropriate permissions will receive an error.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {ruleId} corresponds to a ruleId returned by the /alert-rules endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "ruleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/integrations.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert notification integrations",
        "description": "# Alert notification integrations\nReturns a list of all alert notification integrations (webhooks, PagerDuty, Slack, ‚Ä¶)\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-suppression-windows.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert suppression windows",
        "description": "# Alert suppression windows\nReturns a list of all alert suppression windows configured in your account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-suppression-windows/{alertSuppressionWindowId}.json": {
      "get": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Alert suppression window detail",
        "description": "# Alert suppression window detail\nReturns details for an alert suppression window configured in your account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-suppression-windows/new.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Creating an alert suppression window",
        "description": "# Creating an alert suppression window\nCreates a new alert suppression window in ThousandEyes, based on properties provided in the POST data. In order to create a new alert suppression window, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body containing the following fields:\n * alertSuppressionWindowName\tstring\t\tname of the alert suppression window\n * enabled\tbit\t\t0 for disabled, 1 for enabled\n * tests\tarray of {‚ÄútestId‚Äù: testId} objects\t\tList of tests assigned to the alert suppression window: [{‚ÄútestId‚Äù: 123}, {‚ÄútestId‚Äù: 456}]\n * startDateTime\tdateTime\tyyyy-MM-dd hh:mm:ss\tthe date/time when the alert suppression window will start.\n * timezone\tstring\t\ttimezone name, in Area/Location format, as specified in the IANA TZDB.\n * duration\tinteger\tseconds\tnumber of seconds for which the suppression window will be active\n * repeat\trepeat object\t\tsee repeat options found below\n * repeat.type\tstring\t\t[DAY, WEEK, MONTH, CUSTOM]\n * repeat.intervalType\tstring\t\t[DAY, WEEK, MONTH]\n * repeat.intervalLength\tinteger\t\tnumber of intervalTypes to wait before reactivating the alert suppression window.\n * repeat.daysOfWeek\tstring\t\tSpecify which day of the week the alert suppression window needs to be activated for. Only valid for intervalType = WEEK. [SUN, MON, TUE, WED, THU, FRI, SAT]\n * endRepeat\trepeat object\t\tsee endRepeat options found below\n * endRepeat.type\tstring\t\t[COUNT, NEVER, DATE]\n * endRepeat.count\tinteger\t\tend repeat after number of occurrences (only valid with COUNT type option)\n * endRepeat.date\tdate\tyyyy-MM-dd\tend repeat after specific date (only valid with DATE type option)",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"alertSuppressionWindowName\\\": \\\"Postman DevNet 30 min asw created via API\\\",\\n\\t\\\"enabled\\\": 1,\\n\\t\\\"startDateTime\\\": \\\"2020-01-01 00:00:00\\\",\\n\\t\\\"timezone\\\": \\\"Europe/Amsterdam\\\",\\n\\t\\\"duration\\\": 1800,\\n\\t\\\"repeat\\\": {\\n\\t\\t\\\"type\\\": \\\"DAY\\\"\\n\\t},\\n\\t\\\"endRepeat\\\": {\\n\\t\\t\\\"type\\\": \\\"NEVER\\\"\\n\\t}\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-suppression-windows/{alertSuppressionWindowId}/update.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Updating an alert suppression window",
        "description": "# Updating an alert suppression window\nUpdates an alert suppression window in ThousandEyes, based on properties provided in the POST data. In order to modify an alert suppression window, the user attempting the update must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.\n* Request body containing the following fields\n  * alertSuppressionWindowName\tstring\t\tname of the alert suppression window\n  * enabled\tbit\tn/a\t0 for disabled, 1 for enabled\n  * tests\tarray of {‚ÄútestId‚Äù: testId} objects\t\tList of tests assigned to the alert suppression window: [{‚ÄútestId‚Äù: 123}, {‚ÄútestId‚Äù: 456}]\n  * startDateTime\tdateTime\tyyyy-MM-dd hh:mm:ss\tthe date/time when the alert suppression window will start.\n  * timezone\tstring\t\ttimezone name, in Area/Location format, as specified in the IANA TZDB.\n  * duration\tinteger\tseconds\tnumber of seconds for which the suppression window will be active\n  * repeat\trepeat object\t\tsee repeat options found below\n  * repeat.type\tstring\t\t[DAY, WEEK, MONTH, CUSTOM]\n  * repeat.intervalType\tstring\tn/a\t[DAY, WEEK, MONTH]\n  * repeat.intervalLength\tinteger\tn/a\tnumber of intervalTypes to wait before reactivating the alert suppression window.\n  * repeat.daysOfWeek\tstring\tn/a\tSpecify which day of the week the alert suppression window needs to be activated for. Only valid for intervalType = WEEK. [SUN, MON, TUE, WED, THU, FRI, SAT]\n  * endRepeat\trepeat object\tn/a\tsee endRepeat options found below\n  * endRepeat.type\tstring\tn/a\t[COUNT, NEVER, DATE]\n  * endRepeat.count\tinteger\tn/a\tend repeat after number of occurrences (only valid with COUNT type option)\n  * endRepeat.date\tdate\tyyyy-MM-dd\tend repeat after specific date (only valid with DATE type option)",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"alertSuppressionWindowName\\\": \\\"Postman DevNet 30 min asw created via API\\\",\\n\\t\\\"enabled\\\": 1,\\n\\t\\\"startDateTime\\\": \\\"2020-01-01 00:00:00\\\",\\n\\t\\\"timezone\\\": \\\"Europe/Amsterdam\\\",\\n\\t\\\"duration\\\": 1800,\\n\\t\\\"repeat\\\": {\\n\\t\\t\\\"type\\\": \\\"DAY\\\"\\n\\t},\\n\\t\\\"endRepeat\\\": {\\n\\t\\t\\\"type\\\": \\\"NEVER\\\"\\n\\t}\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/alert-suppression-windows/{alertSuppressionWindowId}/delete.json": {
      "post": {
        "tags": [
          "Alerts \u0026 Notifications"
        ],
        "summary": "Deleting an alert suppression window",
        "description": "# Deleting an alert suppression window\nDeletes an alert suppression window.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups.json": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Labels list",
        "description": "# Labels list\nReturns a list of all labels (formerly called groups) configured in ThousandEyes. This includes both Agent and Test labels.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/{type}.json": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Labels list by type",
        "description": "# Labels list by type\nReturns a list of all tests of the label (formerly called group) type specified, configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n  * endpoint-tests",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/{groupId}.json": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Label details",
        "description": "# Label details\nReturns details for a label (formerly called group) configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {groupId} the ID of the label to retrieve",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/{type}/{groupId}.json": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Label details (by label type)",
        "description": "# Label details (by label type)\nReturns a list of all labels (formerly called groups) configured in ThousandEyes. This includes both Agent and Test labels.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n  * endpoint-tests\n  * {groupId} the ID of the label to retrieve",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/tests/new.json": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Creating a label",
        "description": "# Creating a label\nCreates a new label (formerly called group) in ThousandEyes, based on properties provided in the POST data. In order to create a new label, the user attempting the creation must have sufficient privileges to create labels.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a label and assigning agents or tests, the user needs permission to modify the objects being added.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n* POST body includes the following:\n  * name the name of the new label - this must be unique.\n  * tests an array of testId objects, if the type specified is tests\n  * agents an array of agentId objects, if the type specified is agents\n  * endpointAgents an array of agentId objects, if the type specified is endpoint-agents",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"name\\\": \\\"Postman DevNet group\\\",\\n\\t\\\"tests\\\": [{\\n\\t\\t\\t\\\"testId\\\": {{testId}}\\n\\t\\t}\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/{groupId}/update.json": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Updating a label",
        "description": "# Updating a label\nUpdates a label (formerly called group) in ThousandEyes, based on properties provided in the POST data. In order to edit a label, the user must have access to the target label, and have access to modify the objects that the label contains. For example, to update an agent label, the user needs the Edit Agents permission assigned to their role.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* groupId the label that you wish to update, found in either the /groups or the /groups/{type} endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"name\\\": \\\"Postman DevNet group updated\\\",\\n\\t\\\"tests\\\": [{\\n\\t\\t\\t\\\"testId\\\": {{testId}}\\n\\t\\t}\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/groups/{groupId}/delete.json": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Deleting a label",
        "description": "# Deleting a label\nDeletes a label (formerly called group) currently configured in ThousandEyes. Note that built-in labels (with negative groupId numbers) are not eligible for deletion.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* groupId the label that you wish to delete, found in either the /groups or the /groups/{type} endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/reports.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Reports list",
        "description": "# Reports list\nThis endpoint returns a list of reports configured in ThousandEyes in the context of the user‚Äôs current account group. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint. Use this data to find a report in your account, which is then used in other endpoint to access aggregated data.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/reports/{reportId}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report detail",
        "description": "# Report detail\nThis endpoint returns a list of widgets configured in reports configured in ThousandEyes. Seed this endpoint with a reportId found from the /reports endpoint. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {reportId} the ID of the report you‚Äôre interested in.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "reportId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/reports/{reportId}/{dataComponentId}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report data",
        "description": "# Report data\nThis endpoint returns actual metrics used in the generation of the reports shown. Unlike the metadata options, this endpoint accepts parameters for a time range shown in the data, which defaults to 7 days.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.\n* {reportId} the ID of the report you‚Äôre interested in.\n* {dataComponentId} the ID of the data component for which to retrieve data.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "reportId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "dataComponentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/reports/{reportId}/delete.json": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Deleting a report",
        "description": "# Deleting a report\nDeletes the specified report in ThousandEyes, based on the reportId provided in the API request. Users with the Edit reports for all users in account group permission (Account Admin) can delete any report. Users with Edit own reports permission (Regular User) can only delete the reports they have created.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {reportId} the ID of the report you would like to delete",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "reportId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/report-snapshots.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report snapshots list",
        "description": "# Report snapshots list\nThis endpoint returns a list of report snapshots configured in ThousandEyes in the context of the user‚Äôs current account group. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint. Use this data to find a report snapshot in your account, which is then used in other endpoint to access aggregated data.\n\n* Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/report-snapshots/{snapshotId}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report snapshot detail",
        "description": "# Report snapshot detail\nThis endpoint returns a list of widgets configured in reports configured in ThousandEyes. Seed this endpoint with a reportId found from the /reports endpoint. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint.\n\n* Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {snapshotId} the ID of the report snapshot you‚Äôre interested in.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/report-snapshots/{snapshotId}/{dataComponentId}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report snapshot data",
        "description": "# Report snapshot data\nThis endpoint returns actual metrics used in the generation of the report snapshot shown.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.\n* {snapshotId} the ID of the report snapshot you‚Äôre interested in.\n* {dataComponentId} the ID of the data component for which to retrieve data.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "dataComponentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/report-snapshot/{snapshotId}/delete.json": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Deleting a report snapshot",
        "description": "# Deleting a report snapshot\nDeletes the specified report snapshot in ThousandEyes, based on the snapshotId provided in the API request. Users with the Edit reports for all users in account group permission (Account Admin) can delete any report snapshot. Users with Edit own reports permission (Regular User) can only delete the report snapshots for reports they have created.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {snapshotId} the ID of the report snapshot you would like to delete",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/account-groups.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Account group list",
        "description": "# Account group list\nReturns a list of all account groups available to the current user. The aid value returned for an account in this list of account groups can be used in queries elsewhere within the app. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/account-groups/{aid}.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Account group detail",
        "description": "# Account group detail\nReturns detailed information about a specific account group. Requires that the user making the request has the View all account groups settings permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* aid={aid} account group to query for detail.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "aid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/account-groups/new.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Creating an account group",
        "description": "# Creating an account group\nCreates a new account group. Requires the Edit all account groups permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain account group fields:\n  * accountGroupName\tstring\toptional\tname of the account group. To rename the account group, specify a new name.\n  * agents\tarray of agent objects\toptional\tTo grant access to enterprise agents, specify the agent list. \"agents\":[{\"agentId\": 1234}]. Note that this is not an additive list - the full list must be specified if changing access to agents.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"accountGroupName\\\": \\\"Postman DevNet account group\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/account-groups/{aid}/update.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Updating an account group",
        "description": "# Updating an account group\nModifies an account group. This can include changing the account group‚Äôs name, or modifying the list of users assigned to the account group.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* aid={aid} account group to query for detail.\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain account group fields:\n  * accountGroupName\tstring\toptional\tname of the account group. To rename the account group, specify a new name.\n  * agents\tarray of agent objects\toptional\tTo grant access to enterprise agents, specify the agent list. \"agents\":[{\"agentId\": 1234}]. Note that this is not an additive list - the full list must be specified if changing access to agents.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"accountGroupName\\\": \\\"Postman DevNet account group updated\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "aid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/account-groups/{aid}/delete.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Deleting an account group",
        "description": "# Deleting an account group\nDeletes an account group. Requires the following permissions to be assigned to the user making the request:\n* Assign management permissions\n* Delete account\n* Edit all account groups\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the organization context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error. This must not match the account group to be deleted.\n\n# Request\n* {aid} account group to delete.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "aid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/users.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "User list",
        "description": "# User list\nReturns the list of all users that belong to the Organization, your selected aid is part of. Returns detailed information about a specific user. Requires that the user making the request has the API Access and View all users permissions. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/users/{uid}.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "User detail",
        "description": "# User detail\nReturns detailed information about a specific user. Requires that the user making the request has the API Access and View all users permissions.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} unique ID for the user to query for detail.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/users/new.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Adding a user",
        "description": "# Adding a user\nCreates a new user.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body should contain the following fields:\n  * name\tstring\toptional\tthe name of the user\n  * email\tstring\trequired\temail address for the user\n  * loginAccountGroup\taccountGroup object\trequired\tlogin accountGroup for the user. If the user being added is already associated with another ThousandEyes organization, this value will be   * ignored. The user (once added) can modify his default account group as needed.\n  * loginAccountGroup.aid\tinteger\trequired for loginAccountGroup object\tsystem-generated unique ID of the account group\n  * accountGroupRoles\tlist of accountGroupRole objects\tsee notes\tsee below; either the accountGroupRoles object or the allAccountGroupRoles object must be specified.\n  * accountGroupRoles.accountGroupName.aid\tinteger\trequired for accountGroupName object\tunique account ID for the accountGroupName\n  * accountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n  * allAccountGroupRoles\tlist of roles objects\toptional\teither the accountGroupRoles object or the allAccountGroupRoles object must be specified.\n  * allAccountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n\nA few notes on the topic of user creation:\n* If the user is already a member of another ThousandEyes customer‚Äôs organization, the user will need to set their own login account group.\n* Any update which contains accountGroupRoles is a replace-based update, rather than a delta-based update.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"name\\\": \\\"Postman DevNet User\\\",\\n\\t\\\"email\\\": \\\"postman+devnet@cisco.com\\\",\\n\\t\\\"loginAccountGroup\\\": {\\n\\t\\t\\\"aid\\\": 691\\n\\t},\\n\\t\\\"accountGroupRoles\\\": [{\\n\\t\\t\\t\\\"accountGroup\\\": {\\n\\t\\t\\t\\t\\\"aid\\\": 315\\n\\t\\t\\t},\\n\\t\\t\\t\\\"roles\\\": [{\\n\\t\\t\\t\\t\\\"roleId\\\": 57\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"accountGroup\\\": {\\n\\t\\t\\t\\t\\\"aid\\\": 691\\n\\t\\t\\t},\\n\\t\\t\\t\\\"roles\\\": [{\\n\\t\\t\\t\\t\\\"roleId\\\": 60\\n\\t\\t\\t}]\\n\\t\\t}\\n\\t],\\n\\t\\\"allAccountGroupRoles\\\": [{\\n\\t\\t\\\"roleId\\\": 1140\\n\\t}]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/users/{uid}/update.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Updating a user",
        "description": "# Updating a user\nModifies a user. This can include changing the user‚Äôs name, email address, account group assignments, or roles. Use of this endpoint requires the Edit users in all account groups or Edit users permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} is the unique user ID for the user\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain user fields:\n  * name\tstring\trequired\tthe name of the user\n  * email\tstring\trequired\temail address for the user\n  * loginAccountGroup\taccountGroup object\trequired\tlogin accountGroup for the user\n  * loginAccountGroup.aid\tinteger\trequired for loginAccountGroup object\tsystem-generated unique ID of the account group\n  * accountGroupRoles\tlist of accountGroupRole objects\toptional\tsee below\n  * accountGroupRoles.accountGroupName.aid\tinteger\trequired for accountGroupName object\tunique account ID for the accountGroup\n  * accountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n  * allAccountGroupRoles\tlist of roles objects\toptional\tsee below\n  * allAccountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n\nA few notes on the topic of user modifications:\n* If a user‚Äôs email is updated, the user will need to validate the username change before being able to subsequently log in, or execute API operations.\n* Any update which contains accountGroupRoles is a replace-based update, rather than a delta-based update.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"name\\\": \\\"Postman DevNet User Updated\\\",\\n\\t\\\"email\\\": \\\"postman+devnet@cisco.com\\\",\\n\\t\\\"loginAccountGroup\\\": {\\n\\t\\t\\\"aid\\\": 691\\n\\t},\\n\\t\\\"accountGroupRoles\\\": [{\\n\\t\\t\\t\\\"accountGroup\\\": {\\n\\t\\t\\t\\t\\\"aid\\\": 315\\n\\t\\t\\t},\\n\\t\\t\\t\\\"roles\\\": [{\\n\\t\\t\\t\\t\\\"roleId\\\": 57\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"accountGroup\\\": {\\n\\t\\t\\t\\t\\\"aid\\\": 691\\n\\t\\t\\t},\\n\\t\\t\\t\\\"roles\\\": [{\\n\\t\\t\\t\\t\\\"roleId\\\": 60\\n\\t\\t\\t}]\\n\\t\\t}\\n\\t],\\n\\t\\\"allAccountGroupRoles\\\": [{\\n\\t\\t\\\"roleId\\\": 1140\\n\\t}]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/users/{uid}/delete.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Deleting a user",
        "description": "# Deleting a user\nDeletes a user. Requires Edit users in all account groups or Edit users permissions to be assigned to the user making the request.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} is the unique user ID for the user to delete.\n* content-type and accept headers must be set (both to application/json) when using this endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/roles.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Role list",
        "description": "# Role list\nReturns a list of all roles defined and visible to the current user.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/roles/{roleId}.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Role detail",
        "description": "# Role detail\nReturns detailed information about a role, defining role name, ID and assigned permissions.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* {roleId} is the unique ID for the role",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/roles/new.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Creating a role",
        "description": "# Creating a role\nAllows creation of a role, programmatically.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body should contain the following fields:\n  * roleName\tstring\trequired\tthe name of the role\n  * permissions\tlist of permission objects\toptional\tsee below\n  * permissions.permissionId\tinteger\trequired for permissions object\tsystem-defined unique ID of the permission\n\nA few notes on the topic of role creation:\n* Post with a role name, and permissions that need to be assigned to the role.\n* Permission definitions and details can be obtained from the permissions endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"roleName\\\": \\\"Postman DevNet role\\\",\\n\\t\\\"permissions\\\": [{\\n\\t\\t\\t\\\"permissionId\\\": 1\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"permissionId\\\": 2\\n\\t\\t}\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/roles/{roleId}/update.json": {
      "post": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Updating a role",
        "description": "# Updating a role\nModifies a user-defined role by changing the role name or permissions assigned.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* {roleId} is the unique ID for the role\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain role fields:\n  * roleName\tstring\toptional\tthe name of the role\n  * permissions\tlist of permission objects\toptional\tsee below (and notes below)\n  * permissions.permissionId\tinteger\trequired for permissions object\tsystem-defined unique ID of the permission\n\nA few notes related to role modifications:\n* The full list of permissions must be sent, this endpoint does not support a delta-based grant or revocation of permissions.\n* Permission definitions and details can be obtained from the permissions endpoint.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n\\t\\\"roleName\\\": \\\"Postman DevNet role\\\",\\n\\t\\\"permissions\\\": [{\\n\\t\\t\\t\\\"permissionId\\\": 1\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"permissionId\\\": 2\\n\\t\\t}\\n\\t]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/permissions.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Permission list",
        "description": "# Permission list\nReturns a list of all assignable permissions, which is used in the context of modifying roles.\n\nUsers must be in a role that is assigned managment permissions in order to access this endpoint. Users without management permissions attempting to access this endpoint will have an HTTP/403 response code returned.\n\n# Optional Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/audit/user-events/search.json": {
      "get": {
        "tags": [
          "Administrative endpoints"
        ],
        "summary": "Activity log",
        "description": "# Activity log\nReturns a list of activity log events. User with View activity log for all users in account group permission can see all activity log events in the current account group. User with View own activity log permission can see own activity log events in the current account group. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information.\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS\u0026to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v6/usage.json": {
      "get": {
        "tags": [
          "Usage"
        ],
        "summary": "Obtaining usage details",
        "description": "# Obtaining usage details\nThis endpoint returns usage for the current period. This endpoint requires the View Billing permission (a management permission), and provides visibility across all account groups within the organization. For users who have access to view billing in multiple organizations, query the endpoint using an aid querystring parameter (see optional parameters, below) from each organization.\n\nBilling information (for past months) is not available via this endpoint; this will be implemented as a separate endpoint.\n\n# Optional Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the organization context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error. When querying the /usage endpoint, the aid parameter is used to provide usage details for the organization to which the account group ID belongs. The output always provides visibility across all account groups within the specified organization.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}